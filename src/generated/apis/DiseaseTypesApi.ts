// tslint:disable
/**
 * Open Hospital API Documentation
 * Open Hospital API Documentation
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    DiseaseTypeDTO,
} from '../models';

export interface DeleteDiseaseTypeRequest {
    code: string;
}

export interface NewDiseaseTypeRequest {
    diseaseTypeDTO: DiseaseTypeDTO;
}

export interface UpdateDiseaseTypeRequest {
    diseaseTypeDTO: DiseaseTypeDTO;
}

/**
 * no description
 */
export class DiseaseTypesApi extends BaseAPI {

    /**
     */
    deleteDiseaseType({ code }: DeleteDiseaseTypeRequest): Observable<boolean>
    deleteDiseaseType({ code }: DeleteDiseaseTypeRequest, opts?: OperationOpts): Observable<AjaxResponse<boolean>>
    deleteDiseaseType({ code }: DeleteDiseaseTypeRequest, opts?: OperationOpts): Observable<boolean | AjaxResponse<boolean>> {
        throwIfNullOrUndefined(code, 'code', 'deleteDiseaseType');

        const headers: HttpHeaders = {
        };

        return this.request<boolean>({
            url: '/diseasetypes/{code}'.replace('{code}', encodeURI(code)),
            method: 'DELETE',
            headers,
        }, opts?.responseOpts);
    };

    /**
     */
    getAllDiseaseTypes(): Observable<Array<DiseaseTypeDTO>>
    getAllDiseaseTypes(opts?: OperationOpts): Observable<AjaxResponse<Array<DiseaseTypeDTO>>>
    getAllDiseaseTypes(opts?: OperationOpts): Observable<Array<DiseaseTypeDTO> | AjaxResponse<Array<DiseaseTypeDTO>>> {
        const headers: HttpHeaders = {
        };

        return this.request<Array<DiseaseTypeDTO>>({
            url: '/diseasetypes',
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     */
    newDiseaseType({ diseaseTypeDTO }: NewDiseaseTypeRequest): Observable<DiseaseTypeDTO>
    newDiseaseType({ diseaseTypeDTO }: NewDiseaseTypeRequest, opts?: OperationOpts): Observable<AjaxResponse<DiseaseTypeDTO>>
    newDiseaseType({ diseaseTypeDTO }: NewDiseaseTypeRequest, opts?: OperationOpts): Observable<DiseaseTypeDTO | AjaxResponse<DiseaseTypeDTO>> {
        throwIfNullOrUndefined(diseaseTypeDTO, 'diseaseTypeDTO', 'newDiseaseType');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<DiseaseTypeDTO>({
            url: '/diseasetypes',
            method: 'POST',
            headers,
            body: diseaseTypeDTO,
        }, opts?.responseOpts);
    };

    /**
     */
    updateDiseaseType({ diseaseTypeDTO }: UpdateDiseaseTypeRequest): Observable<DiseaseTypeDTO>
    updateDiseaseType({ diseaseTypeDTO }: UpdateDiseaseTypeRequest, opts?: OperationOpts): Observable<AjaxResponse<DiseaseTypeDTO>>
    updateDiseaseType({ diseaseTypeDTO }: UpdateDiseaseTypeRequest, opts?: OperationOpts): Observable<DiseaseTypeDTO | AjaxResponse<DiseaseTypeDTO>> {
        throwIfNullOrUndefined(diseaseTypeDTO, 'diseaseTypeDTO', 'updateDiseaseType');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<DiseaseTypeDTO>({
            url: '/diseasetypes',
            method: 'PUT',
            headers,
            body: diseaseTypeDTO,
        }, opts?.responseOpts);
    };

}
