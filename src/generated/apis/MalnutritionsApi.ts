// tslint:disable
/**
 * Open Hospital API Documentation
 * Open Hospital API Documentation
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders, HttpQuery } from '../runtime';
import type {
    MalnutritionDTO,
} from '../models';

export interface DeleteMalnutritionRequest {
    code: number;
}

export interface GetLastMalnutritionRequest {
    idPatient: number;
}

export interface GetMalnutritionRequest {
    idAdmission: string;
}

export interface NewMalnutritionRequest {
    malnutritionDTO: MalnutritionDTO;
}

export interface UpdateMalnutritionRequest {
    malnutritionDTO: MalnutritionDTO;
}

/**
 * no description
 */
export class MalnutritionsApi extends BaseAPI {

    /**
     */
    deleteMalnutrition({ code }: DeleteMalnutritionRequest): Observable<boolean>
    deleteMalnutrition({ code }: DeleteMalnutritionRequest, opts?: OperationOpts): Observable<AjaxResponse<boolean>>
    deleteMalnutrition({ code }: DeleteMalnutritionRequest, opts?: OperationOpts): Observable<boolean | AjaxResponse<boolean>> {
        throwIfNullOrUndefined(code, 'code', 'deleteMalnutrition');

        const headers: HttpHeaders = {
        };

        const query: HttpQuery = { // required parameters are used directly since they are already checked by throwIfNullOrUndefined
            'code': code,
        };

        return this.request<boolean>({
            url: '/malnutritions',
            method: 'DELETE',
            headers,
            query,
        }, opts?.responseOpts);
    };

    /**
     */
    getLastMalnutrition({ idPatient }: GetLastMalnutritionRequest): Observable<MalnutritionDTO>
    getLastMalnutrition({ idPatient }: GetLastMalnutritionRequest, opts?: OperationOpts): Observable<AjaxResponse<MalnutritionDTO>>
    getLastMalnutrition({ idPatient }: GetLastMalnutritionRequest, opts?: OperationOpts): Observable<MalnutritionDTO | AjaxResponse<MalnutritionDTO>> {
        throwIfNullOrUndefined(idPatient, 'idPatient', 'getLastMalnutrition');

        const headers: HttpHeaders = {
        };

        return this.request<MalnutritionDTO>({
            url: '/malnutritions/last/{id_patient}'.replace('{id_patient}', encodeURI(idPatient)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     */
    getMalnutrition({ idAdmission }: GetMalnutritionRequest): Observable<Array<MalnutritionDTO>>
    getMalnutrition({ idAdmission }: GetMalnutritionRequest, opts?: OperationOpts): Observable<AjaxResponse<Array<MalnutritionDTO>>>
    getMalnutrition({ idAdmission }: GetMalnutritionRequest, opts?: OperationOpts): Observable<Array<MalnutritionDTO> | AjaxResponse<Array<MalnutritionDTO>>> {
        throwIfNullOrUndefined(idAdmission, 'idAdmission', 'getMalnutrition');

        const headers: HttpHeaders = {
        };

        return this.request<Array<MalnutritionDTO>>({
            url: '/malnutritions/{id_admission}'.replace('{id_admission}', encodeURI(idAdmission)),
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     */
    newMalnutrition({ malnutritionDTO }: NewMalnutritionRequest): Observable<MalnutritionDTO>
    newMalnutrition({ malnutritionDTO }: NewMalnutritionRequest, opts?: OperationOpts): Observable<AjaxResponse<MalnutritionDTO>>
    newMalnutrition({ malnutritionDTO }: NewMalnutritionRequest, opts?: OperationOpts): Observable<MalnutritionDTO | AjaxResponse<MalnutritionDTO>> {
        throwIfNullOrUndefined(malnutritionDTO, 'malnutritionDTO', 'newMalnutrition');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<MalnutritionDTO>({
            url: '/malnutritions',
            method: 'POST',
            headers,
            body: malnutritionDTO,
        }, opts?.responseOpts);
    };

    /**
     */
    updateMalnutrition({ malnutritionDTO }: UpdateMalnutritionRequest): Observable<MalnutritionDTO>
    updateMalnutrition({ malnutritionDTO }: UpdateMalnutritionRequest, opts?: OperationOpts): Observable<AjaxResponse<MalnutritionDTO>>
    updateMalnutrition({ malnutritionDTO }: UpdateMalnutritionRequest, opts?: OperationOpts): Observable<MalnutritionDTO | AjaxResponse<MalnutritionDTO>> {
        throwIfNullOrUndefined(malnutritionDTO, 'malnutritionDTO', 'updateMalnutrition');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<MalnutritionDTO>({
            url: '/malnutritions',
            method: 'PUT',
            headers,
            body: malnutritionDTO,
        }, opts?.responseOpts);
    };

}
