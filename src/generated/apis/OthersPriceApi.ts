// tslint:disable
/**
 * Open Hospital API Documentation
 * Open Hospital API Documentation
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    PricesOthersDTO,
} from '../models';

export interface DeletePricesOthersRequest {
    id: number;
}

export interface NewPricesOthersRequest {
    pricesOthersDTO: PricesOthersDTO;
}

export interface UpdatePricesOthersRequest {
    id: number;
    pricesOthersDTO: PricesOthersDTO;
}

/**
 * no description
 */
export class OthersPriceApi extends BaseAPI {

    /**
     */
    deletePricesOthers({ id }: DeletePricesOthersRequest): Observable<boolean>
    deletePricesOthers({ id }: DeletePricesOthersRequest, opts?: OperationOpts): Observable<AjaxResponse<boolean>>
    deletePricesOthers({ id }: DeletePricesOthersRequest, opts?: OperationOpts): Observable<boolean | AjaxResponse<boolean>> {
        throwIfNullOrUndefined(id, 'id', 'deletePricesOthers');

        const headers: HttpHeaders = {
        };

        return this.request<boolean>({
            url: '/pricesothers/{id}'.replace('{id}', encodeURI(id)),
            method: 'DELETE',
            headers,
        }, opts?.responseOpts);
    };

    /**
     */
    getPricesOthers(): Observable<Array<PricesOthersDTO>>
    getPricesOthers(opts?: OperationOpts): Observable<AjaxResponse<Array<PricesOthersDTO>>>
    getPricesOthers(opts?: OperationOpts): Observable<Array<PricesOthersDTO> | AjaxResponse<Array<PricesOthersDTO>>> {
        const headers: HttpHeaders = {
        };

        return this.request<Array<PricesOthersDTO>>({
            url: '/pricesothers',
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     */
    newPricesOthers({ pricesOthersDTO }: NewPricesOthersRequest): Observable<PricesOthersDTO>
    newPricesOthers({ pricesOthersDTO }: NewPricesOthersRequest, opts?: OperationOpts): Observable<AjaxResponse<PricesOthersDTO>>
    newPricesOthers({ pricesOthersDTO }: NewPricesOthersRequest, opts?: OperationOpts): Observable<PricesOthersDTO | AjaxResponse<PricesOthersDTO>> {
        throwIfNullOrUndefined(pricesOthersDTO, 'pricesOthersDTO', 'newPricesOthers');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<PricesOthersDTO>({
            url: '/pricesothers',
            method: 'POST',
            headers,
            body: pricesOthersDTO,
        }, opts?.responseOpts);
    };

    /**
     */
    updatePricesOthers({ id, pricesOthersDTO }: UpdatePricesOthersRequest): Observable<PricesOthersDTO>
    updatePricesOthers({ id, pricesOthersDTO }: UpdatePricesOthersRequest, opts?: OperationOpts): Observable<AjaxResponse<PricesOthersDTO>>
    updatePricesOthers({ id, pricesOthersDTO }: UpdatePricesOthersRequest, opts?: OperationOpts): Observable<PricesOthersDTO | AjaxResponse<PricesOthersDTO>> {
        throwIfNullOrUndefined(id, 'id', 'updatePricesOthers');
        throwIfNullOrUndefined(pricesOthersDTO, 'pricesOthersDTO', 'updatePricesOthers');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<PricesOthersDTO>({
            url: '/pricesothers/{id}'.replace('{id}', encodeURI(id)),
            method: 'PUT',
            headers,
            body: pricesOthersDTO,
        }, opts?.responseOpts);
    };

}
