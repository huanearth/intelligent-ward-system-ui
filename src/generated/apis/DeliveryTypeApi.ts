// tslint:disable
/**
 * Open Hospital API Documentation
 * Open Hospital API Documentation
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import type { Observable } from 'rxjs';
import type { AjaxResponse } from 'rxjs/ajax';
import { BaseAPI, throwIfNullOrUndefined, encodeURI } from '../runtime';
import type { OperationOpts, HttpHeaders } from '../runtime';
import type {
    DeliveryTypeDTO,
} from '../models';

export interface DeleteDeliveryTypeRequest {
    code: string;
}

export interface NewDeliveryTypeRequest {
    deliveryTypeDTO: DeliveryTypeDTO;
}

export interface UpdateDeliveryTypesRequest {
    deliveryTypeDTO: DeliveryTypeDTO;
}

/**
 * no description
 */
export class DeliveryTypeApi extends BaseAPI {

    /**
     */
    deleteDeliveryType({ code }: DeleteDeliveryTypeRequest): Observable<boolean>
    deleteDeliveryType({ code }: DeleteDeliveryTypeRequest, opts?: OperationOpts): Observable<AjaxResponse<boolean>>
    deleteDeliveryType({ code }: DeleteDeliveryTypeRequest, opts?: OperationOpts): Observable<boolean | AjaxResponse<boolean>> {
        throwIfNullOrUndefined(code, 'code', 'deleteDeliveryType');

        const headers: HttpHeaders = {
        };

        return this.request<boolean>({
            url: '/deliverytypes/{code}'.replace('{code}', encodeURI(code)),
            method: 'DELETE',
            headers,
        }, opts?.responseOpts);
    };

    /**
     */
    getDeliveryTypes(): Observable<Array<DeliveryTypeDTO>>
    getDeliveryTypes(opts?: OperationOpts): Observable<AjaxResponse<Array<DeliveryTypeDTO>>>
    getDeliveryTypes(opts?: OperationOpts): Observable<Array<DeliveryTypeDTO> | AjaxResponse<Array<DeliveryTypeDTO>>> {
        const headers: HttpHeaders = {
        };

        return this.request<Array<DeliveryTypeDTO>>({
            url: '/deliverytypes',
            method: 'GET',
            headers,
        }, opts?.responseOpts);
    };

    /**
     */
    newDeliveryType({ deliveryTypeDTO }: NewDeliveryTypeRequest): Observable<DeliveryTypeDTO>
    newDeliveryType({ deliveryTypeDTO }: NewDeliveryTypeRequest, opts?: OperationOpts): Observable<AjaxResponse<DeliveryTypeDTO>>
    newDeliveryType({ deliveryTypeDTO }: NewDeliveryTypeRequest, opts?: OperationOpts): Observable<DeliveryTypeDTO | AjaxResponse<DeliveryTypeDTO>> {
        throwIfNullOrUndefined(deliveryTypeDTO, 'deliveryTypeDTO', 'newDeliveryType');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<DeliveryTypeDTO>({
            url: '/deliverytypes',
            method: 'POST',
            headers,
            body: deliveryTypeDTO,
        }, opts?.responseOpts);
    };

    /**
     */
    updateDeliveryTypes({ deliveryTypeDTO }: UpdateDeliveryTypesRequest): Observable<DeliveryTypeDTO>
    updateDeliveryTypes({ deliveryTypeDTO }: UpdateDeliveryTypesRequest, opts?: OperationOpts): Observable<AjaxResponse<DeliveryTypeDTO>>
    updateDeliveryTypes({ deliveryTypeDTO }: UpdateDeliveryTypesRequest, opts?: OperationOpts): Observable<DeliveryTypeDTO | AjaxResponse<DeliveryTypeDTO>> {
        throwIfNullOrUndefined(deliveryTypeDTO, 'deliveryTypeDTO', 'updateDeliveryTypes');

        const headers: HttpHeaders = {
            'Content-Type': 'application/json',
        };

        return this.request<DeliveryTypeDTO>({
            url: '/deliverytypes',
            method: 'PUT',
            headers,
            body: deliveryTypeDTO,
        }, opts?.responseOpts);
    };

}
